package ${package}.${moduleName}.controller;

import java.util.Arrays;
import java.util.Map;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.*;

import ${package}.${moduleName}.entity.${className}Entity;
import ${package}.${moduleName}.service.${className}Service;
import ${mainPath}.utils.PageUtils;
import ${mainPath}.utils.R;

/**
 * ${comments}
 *
 * @author ${author}  ${email}
 * @since ${date}
 */
@RestController
@RequestMapping("${moduleName}/${pathName}")
@Api("${comments} API")
public class ${className}Controller {
    @Autowired
    private ${className}Service ${classname}Service;

    /**
     * 分页列表
     */
    @GetMapping("/page")
    @RequiresPermissions("${moduleName}:${pathName}:list")
    @ApiOperation(value = "获取${pathName}分页列表", notes = "$!{pathName}分页列表", response = R.class)
    public R page(@RequestParam Map<String, Object> params){
        PageUtils page = ${classname}Service.queryPage(params);
        return R.ok().put("page", page);
    }


    /**
     * 信息
     */
    @GetMapping("/info/{${pk.attrname}}")
    @RequiresPermissions("${moduleName}:${pathName}:info")
    @ApiOperation(value = "获取${pathName}对象详情", notes = "$!{pathName}对象详情", response = R.class)
    public R info(@PathVariable("${pk.attrname}") ${pk.attrType} ${pk.attrname}){
		${className}Entity ${classname} = ${classname}Service.getById(${pk.attrname});
        return R.ok().put("${classname}", ${classname});
    }

    /**
     * 保存
     */
    @PostMapping("/save")
    @RequiresPermissions("${moduleName}:${pathName}:save")
    @ApiOperation(value = "保存${pathName}对象", notes = "$!{pathName}对象", response = R.class)
    public R save(@RequestBody ${className}Entity ${classname}){
		${classname}Service.save(${classname});
        return R.ok();
    }

    /**
     * 修改
     */
    @PostMapping("/update")
    @RequiresPermissions("${moduleName}:${pathName}:update")
    @ApiOperation(value = "修改${pathName}对象", notes = "$!{pathName}对象", response = R.class)
    public R update(@RequestBody ${className}Entity ${classname}){
		${classname}Service.updateById(${classname});
        return R.ok();
    }

    /**
     * 删除
     */
    @GetMapping("/delete")
    @RequiresPermissions("${moduleName}:${pathName}:delete")
    @ApiOperation(value = "删除${pathName}对象", notes = "$!{pathName}对象", response = R.class)
        public R delete(@RequestParam ${pk.attrType}[] ${pk.attrname}s){
            ${classname}Service.removeByIds(Arrays.asList(${pk.attrname}s));
            return R.ok();
    }

}
